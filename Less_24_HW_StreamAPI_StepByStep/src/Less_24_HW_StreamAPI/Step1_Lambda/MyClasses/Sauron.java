package Less_24_HW_StreamAPI.Step1_Lambda.MyClasses;
/*
Класс 'Саурон', который имеет метод 'подчинить себе'
- универсальный и ужасный, принимает в качестве аргумента
объект класса Slave (и его наследников). Поскольку
у нас Slave это интерфейс, то значит всех кто на него
подписан.
*/
public class Sauron {
    /*
    Метод возвращает строку, а принимает два аргумента,
    тот кому отдали приказ и количество сколько раз
    приказ нужно выполнить.
    */
    public String subjugate(Slave slave, int count) {
        /*
        Мы знаем, что все объекты имплементирующие
        интерфейс Slave точно имеют метод 'исполнить
        волю хозяина' и данный метод принимает в
        качестве аргумента 'количество раз' исполнения
        воли хозяина.

        Пока все просто.

        И тут возникает загвоздка, мы не знаем чего может
        пожелать мерзкий Sauron. Конечно, это простой и
        конкретный пример - метод 'подчинить себе'
        возвращает объект класса String. Т.ч. на выходе
        Sauron получит только веселое графити, зато много.

        Естественно можно подумать о параметризации и тогда
        наш Sauron резко прибавит во власти.
        */
        return slave.obeyTheMastersOrders(count);
    }
}
