Немного теории о предикатах.

Предикат (лат. praedicatum «заявленное, упомянутое, сказанное») — это утверждение,
высказанное о субъекте. Субъектом высказывания называется то, о чём делается утверждение.

Предикат в программировании — выражение, использующее одну или более величину с результатом
логического типа.

Предикат - это функция с множеством значений {0,1} или {ложь, истина}, определённая на неком
множестве {M1, M2, M3, . . .}. Таким образом, каждый набор элементов множества {M1 - Mn}
характеризуется либо как «истинный», либо как «ложный».

Другими словами, в приложении к задачам программирования, на вход метода-предиката поступает
набор данных: массив, коллекция, поток данных, которые проходят через некое сравнение (условие).
На выходе метода-предиката мы имеем другой набор данных, например, часть первоначального
информационного потока, элементы которого прошли 'тестовое условие' предиката.

!!! НО к массиву, коллекции, информационному потоку можно применить целый набор совершенно разных
тестовых условий и под каждый такой тестовый метод придется писать свой программный код. Однако,
на практике такой код будет иметь однообразный вид и основным отличием всего метода будет -
единственная строка с условием (тестовая операция или набор тестовых операций). !!!

Поскольку код однотипный, его можно 'скрыть под капот' оставив программисту возможность написать
самое главное - единственную ключевую функцию: сравнения, преобразования, перебора и т.д.

Так появился функциональный код. 'Вроде бы' короткий и легко читаемый, одно-двух строчный код,
вместо 'серьезной портянки на 100 строк'. Только к нему еще привыкнуть надо и только многократная
практика позволяет его легко читать и понимать.

--------------------------------------------------------------------------------------------------
Более подробно о Lambda выражениям см. тут: https://github.com/JcoderPaul/JavaExtended-22-23
--------------------------------------------------------------------------------------------------
